sort(table(words), decreasing=TRUE)
}
string
length(string)
is.identical(string, 0)
identical(string,0)
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset05.rds")
options(warn=-1)
string <- grep(a, subset)
if(length(string) == 0){} stop("shorten the string"))}
awords <- strsplit(a, " ")
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
}
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset05.rds")
options(warn=-1)
string <- grep(a, subset)
if(length(string) == 0){ stop("shorten the string"))}
awords <- strsplit(a, " ")
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
}
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset05.rds")
options(warn=-1)
string <- grep(a, subset)
if(length(string) == 0){ stop("shorten the string")}
awords <- strsplit(a, " ")
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
}
NextWord("tell me about his")
NextWord("me about his")
NextWord("about his")
grep("spiritual", NextWord("tell me about his"))
grep("spiritual", NextWord("about his"))
grep("horticultural", NextWord("about his"))
grep("financial", NextWord("about his"))
grep("marital", NextWord("about his"))
NextWord("arctic monkeys this")
NextWord("monkeys this")
NextWord("arctic monkeys")
a <- "arctic monkeys"
grep(a, subset)
grep("arctic", subset)
enBlogs <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.blogs.txt")
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
grep("arctic", enBlogs)
enTwitter <- readLines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.twitter.txt")
grep("arctic", enTwitter)
a
a <- "arctic monkeys this"
string <- grep(a, enTwitter)
if(length(string) == 0){ stop("shorten the string")}
awords <- strsplit(a, " ")
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
string
a <- "arctic monkeys"
string <- grep(a, enTwitter)
if(length(string) == 0){ stop("shorten the string")}
awords <- strsplit(a, " ")
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
locations
string
enTwitter[string]
enBlogs <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.blogs.txt")
enNews <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.news.txt")
awords
sentences
subset <- enBlogs
string <- grep(a, subset)
if(length(string) == 0){ stop("shorten the string")}
awords <- strsplit(a, " ")
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
a
subet
subset
string <- grep(a, subset)
string
string <- grep(a, subset)
if(length(string) == 0){ stop("shorten the string")}
awords <- strsplit(a, " ")
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
a <- "arctic monkeys this"
enBlogs <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.blogs.txt")
enTwitter <- readLines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.twitter.txt")
enNews <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.news.txt")
a
grep(a, enNews)
grep(a, enBlogs)
grep("arctic monkeys", enNews)
grep("arctic monkeys", enBlogs)
grep("arctic monkeys", enTwitter)
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset05.rds")
options(warn=-1)
string <- grep(a, subset)
awords <- strsplit(a, " ")
if(length(string) == 0){
library(tm)
tdm <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/tdm05.rds")
firstTwo <- c(awords[[1]][1], awords[[1]][2])
firstTwo <- paste(firstTwo, collapse=" ")
lastTwo <- c(awords[[1]][length(awords[[1]])-1], awords[[1]][length(awords[[1]])])
lastTwo <- paste(lastTwo, collapse=" ")
firstTwoCor <- findAssocs(tdm, firstTwo, .01)
lastTwoCor <- findAssocs(tdm, lastTwo, .01)
if (length(firstTwoCor)==0 && length(lastTwoCor)==0){stop("shorten the string")}
print(firstTwoCor)
print(lastTwoCor)}
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
}
NextWord("arctic monkeys")
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset05.rds")
options(warn=-1)
string <- grep(a, subset)
awords <- strsplit(a, " ")
if(length(string) == 0){
library(tm)
tdm <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/tdm05.rds")
firstTwo <- c(awords[[1]][1], awords[[1]][2])
firstTwo <- paste(firstTwo, collapse=" ")
lastTwo <- c(awords[[1]][length(awords[[1]])-1], awords[[1]][length(awords[[1]])])
lastTwo <- paste(lastTwo, collapse=" ")
firstTwoCor <- findAssocs(tdm, firstTwo, .01)
lastTwoCor <- findAssocs(tdm, lastTwo, .01)
if (length(firstTwoCor)==0) {stop("shorten the string")}
if (length(lastTwoCor)==0){stop("shorten the string")}
print(firstTwoCor)
print(lastTwoCor)}
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
}
NextWord("arctic monkeys")
a <- "arctic monkeys this"
tdm <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/tdm05.rds")
firstTwo <- c(awords[[1]][1], awords[[1]][2])
firstTwo <- paste(firstTwo, collapse=" ")
lastTwo <- c(awords[[1]][length(awords[[1]])-1], awords[[1]][length(awords[[1]])])
lastTwo <- paste(lastTwo, collapse=" ")
firstTwoCor <- findAssocs(tdm, firstTwo, .01)
lastTwoCor <- findAssocs(tdm, lastTwo, .01)
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset05.rds")
options(warn=-1)
string <- grep(a, subset)
awords <- strsplit(a, " ")
library(tm)
tdm <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/tdm05.rds")
firstTwo <- c(awords[[1]][1], awords[[1]][2])
firstTwo <- paste(firstTwo, collapse=" ")
lastTwo <- c(awords[[1]][length(awords[[1]])-1], awords[[1]][length(awords[[1]])])
lastTwo <- paste(lastTwo, collapse=" ")
firstTwoCor <- findAssocs(tdm, firstTwo, .01)
lastTwoCor <- findAssocs(tdm, lastTwo, .01)
length(firstTwoCor)
firstTwoCor
identical(firstTwoCor, 0)
class(firstTwoCor)
firstTwoCor[1]
firstTwoCor[2]
identical(firstTwoCor[1], 0)
firstTwoCor$firstTwo
names(firstTwoCor)
firstTwoCor$arctic monkeys
firstTwoCor$arctic
identical(firstTwoCor$arctic, 0)
firstTwoCor[1]
class(firstTwoCor$arctic)
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset05.rds")
options(warn=-1)
string <- grep(a, subset)
awords <- strsplit(a, " ")
if(length(string) == 0){
library(tm)
tdm <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/tdm05.rds")
firstTwo <- c(awords[[1]][1], awords[[1]][2])
firstTwo <- paste(firstTwo, collapse=" ")
lastTwo <- c(awords[[1]][length(awords[[1]])-1], awords[[1]][length(awords[[1]])])
lastTwo <- paste(lastTwo, collapse=" ")
firstTwoCor <- findAssocs(tdm, firstTwo, .01)
lastTwoCor <- findAssocs(tdm, lastTwo, .01)
if (length(firstTwoCor)< 2) {stop("shorten the string")}
if (length(lastTwoCor) < 2){stop("shorten the string")}
print(firstTwoCor)
print(lastTwoCor)}
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
}
NextWord("arctic monkeys")
NextWord("monkeys")
NextWord("monkeys this")
NextWord("can't wait to see this")
NextWord("give anything to see this")
NextWord("arctic monkeys")
NextWord("anything to see")
NextWord("helps reduce your")
NextWord("reduce your")
NextWord("reduce")
NextWord("helps reduce")
NextWord("help reduce")
NextWord("to take a")
NextWord("settle the")
NextWord("jury to settle the")
NextWord("jury settle the")
NextWord("groceries in")
NextWord("bags of groceries in")
NextWord("bags in")
NextWord("hold bags in")
NextWord("each")
grep("arm", NextWord("each"))
grep("hand", NextWord("each"))
grep("finger", NextWord("each"))
grep("toe", NextWord("each"))
grep("hand", NextWord("each"))
grep("head", NextWord("each"))
NextWord("bottom to the")
NextWord("from playing")
NextWord("playing")
NextWord("Adam Sandler's")
NextWord("Adam Sandler")
NextWord("Sandler")
enBlogs <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.blogs.txt")
set.seed(100)
enBlogsSubset <- sample(enBlogs, size=length(enBlogs)*.5, replace=FALSE)
enTwitter <- readLines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.twitter.txt")
set.seed(100)
enTwitterSubset <- sample(enTwitter, size=length(enTwitter)*.5, replace=FALSE)
enNews <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.news.txt")
set.seed(100)
enNewsSubset <- sample(enNews, size=length(enNews)*.5, replace=FALSE)
subset <- c(enBlogsSubset, enTwitterSubset, enNewsSubset)
saveRDS(subset, "~/LL/Coursera/Courses/Capstone/Subsets/subset50.rds")
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
enBlogs <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.blogs.txt")
set.seed(100)
enBlogsSubset <- sample(enBlogs, size=length(enBlogs)*.5, replace=FALSE)
enTwitter <- readLines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.twitter.txt")
set.seed(100)
enTwitterSubset <- sample(enTwitter, size=length(enTwitter)*.5, replace=FALSE)
enNews <- stri_read_lines("~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.news.txt")
set.seed(100)
enNewsSubset <- sample(enNews, size=length(enNews)*.5, replace=FALSE)
subset <- c(enBlogsSubset, enTwitterSubset, enNewsSubset)
saveRDS(subset, "~/LL/Coursera/Courses/Capstone/Subsets/subset50.rds")
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset50.rds")
options(warn=-1)
string <- grep(a, subset)
awords <- strsplit(a, " ")
if(length(string) == 0){
library(tm)
tdm <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/tdm05.rds")
firstTwo <- c(awords[[1]][1], awords[[1]][2])
firstTwo <- paste(firstTwo, collapse=" ")
lastTwo <- c(awords[[1]][length(awords[[1]])-1], awords[[1]][length(awords[[1]])])
lastTwo <- paste(lastTwo, collapse=" ")
firstTwoCor <- findAssocs(tdm, firstTwo, .01)
lastTwoCor <- findAssocs(tdm, lastTwo, .01)
if (length(firstTwoCor)< 2) {stop("shorten the string")}
if (length(lastTwoCor) < 2){stop("shorten the string")}
print(firstTwoCor)
print(lastTwoCor)}
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
sort(table(words), decreasing=TRUE)
}
NextWord("tell me about his")
NextWord("telling me about his")
NextWord("about his")
grep("spiritual", NextWord("about his"))
grep("horticultural", NextWord("about his"))
grep("financial", NextWord("about his"))
grep("marital", NextWord("about his"))
?return
NextWord("about his")
NextWord <- function(a = char()){
subset <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/subset50.rds")
options(warn=-1)
string <- grep(a, subset)
awords <- strsplit(a, " ")
if(length(string) == 0){
library(tm)
tdm <- readRDS("~/LL/Coursera/Courses/Capstone/Subsets/tdm05.rds")
firstTwo <- c(awords[[1]][1], awords[[1]][2])
firstTwo <- paste(firstTwo, collapse=" ")
lastTwo <- c(awords[[1]][length(awords[[1]])-1], awords[[1]][length(awords[[1]])])
lastTwo <- paste(lastTwo, collapse=" ")
firstTwoCor <- findAssocs(tdm, firstTwo, .01)
lastTwoCor <- findAssocs(tdm, lastTwo, .01)
if (length(firstTwoCor)< 2) {stop("shorten the string")}
if (length(lastTwoCor) < 2){stop("shorten the string")}
print(firstTwoCor)
print(lastTwoCor)}
sentences <- strsplit(subset[string], " ")
locations <- as.integer()
words <- as.character()
for (i in 1:length(sentences)){
locations <- grep(awords[[1]][1], sentences[[i]]) + length(awords[[1]])
words[i] <- sentences[[i]][locations]
}
final <- sort(table(words), decreasing=TRUE)
return(final)
final
}
NextWord("about his")
class(a)
class(final)
NextWord("arctic monkeys")
NextWord("arctic monkeys this")
NextWord("arctic monkeys")
NextWord("monkeys this")
NextWord("helps reduce your")
NextWord("help reduce your")
NextWord("reduce your")
NextWord("settle the")
NextWord("groceries in")
NextWord("groceries in each")
NextWord("Adam Sandler's")
NextWord("Adam Sandler")
NextWord("live and")
EquityList("EDN")
source("EquityList.R")
library(XML)
install.packages("XML")
EquityList <- function(find="char") {
exit
library(xlsx)
library(dplyr)
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts")
data = read.csv("NYSEComplete.csv")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
data <- data[,c(1:2,7:8)]
data <- arrange(data, Sector, Industry)
View(data)
unique(data$Industry)
Industry <- unique(data$Industry)
Industry
#takes only names with "Fund", "Trust", or "Income" in them. Excludes "Pimco"
library(xlsx)
library(dplyr)
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts")
data = read.csv("NYSEComplete.csv")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
data <- data[,c(1:2,7:8)]
data <- arrange(data, Sector, Industry)
data <- data[grepl("Fund|Trust|Income", data$Name),]
data <- data[!grepl("PIMCO", data$Name),]
data <- data[!grepl("\\^", data$Symbol),]
write.xlsx2(data, "NYSE2.xlsx")
View(data)
#takes only names with "Fund", "Trust", or "Income" in them. Excludes "Pimco"
library(xlsx)
library(dplyr)
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts")
data = read.csv("NYSEComplete.csv")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
data <- data[,c(1:2,7:8)]
data <- arrange(data, Sector, Industry)
row.names(data) <- NULL
data <- data[grepl("Fund|Trust|Income", data$Name),]
data <- data[!grepl("PIMCO", data$Name),]
data <- data[!grepl("\\^", data$Symbol),]
write.xlsx2(data, "NYSE2.xlsx")
#takes only names with "Fund", "Trust", or "Income" in them. Excludes "Pimco"
library(xlsx)
library(dplyr)
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts")
data = read.csv("NYSEComplete.csv")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
data <- data[,c(1:2,7:8)]
data <- arrange(data, Sector, Industry)
row.names(data) <- NULL
data <- data[grepl("Fund|Trust|Income", data$Name),]
data <- data[!grepl("PIMCO", data$Name),]
data <- data[!grepl("\\^", data$Symbol),]
write.xlsx2(data, "NYSE2.xlsx")
?write.xlsx2
#takes only names with "Fund", "Trust", or "Income" in them. Excludes "Pimco"
library(xlsx)
library(dplyr)
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts")
data = read.csv("NYSEComplete.csv")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
data <- data[,c(1:2,7:8)]
data <- arrange(data, Sector, Industry)
data <- data[grepl("Fund|Trust|Income", data$Name),]
data <- data[!grepl("PIMCO", data$Name),]
data <- data[!grepl("\\^", data$Symbol),]
write.xlsx2(data, "NYSE2.xlsx", row.names=FALSE)
#takes only names with "Fund", "Trust", or "Income" in them. Excludes "Pimco"
library(xlsx)
library(dplyr)
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts")
data = read.csv("NYSEComplete.csv")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
data <- data[,c(1:2,7:8)]
data <- arrange(data, Sector, Industry)
data <- data[grepl("Fund|Trust|Income", data$Name),]
View(data)
data <- data[!grepl("[Pp][Ii][Mm][Cc][Oo]", data$Name),]
View(data)
data <- data[!grepl("\\^", data$Symbol),]
write.xlsx2(data, "NYSE2.xlsx", row.names=FALSE)
#takes only names with "Fund", "Trust", or "Income" in them. Excludes "Pimco"
library(xlsx)
library(dplyr)
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts")
data = read.csv("NYSEComplete.csv")
setwd("~/LL/Trading - GPC/Primus/Reference/Stock LIsts/PrimusScripts")
data <- data[,c(1:2,7:8)]
data <- arrange(data, Sector, Industry)
data <- data[grepl("Fund|Trust|Income", data$Name),]
data <- data[!grepl("[Pp][Ii][Mm][Cc][Oo]", data$Name),]
data <- data[!grepl("\\^", data$Symbol),]
write.xlsx2(data, "NYSE2.xlsx", row.names=FALSE)
